name: "Dynamic Scraper Login Test"
description: "Test dynamic scraping (Selenium) with login functionality using quotes.toscrape.com/login"
urls:
  # Target page to scrape *after* attempting login
  - "https://quotes.toscrape.com/"
dynamic: true # IMPORTANT: Must be true for DynamicScraper

# --- Dynamic Options ---
wait_for_selector: "div.quote" # Wait for quote element on the TARGET page
wait_time: 3
headless: true
# page_load_timeout: 30

# --- Login Configuration ---
login_config: # Corrected key
  login_url: "https://quotes.toscrape.com/login" # The login page URL
  username_selector: "#username"              # CSS selector for username input
  password_selector: "#password"              # CSS selector for password input
  submit_selector: "input[type='submit'][value='Login']" # CSS selector for submit button
  # --- Use dummy credentials for this test site ---
  username: "testuser"
  password: "password"
  # --- Success Check: Look for the Logout link that appears after form submission ---
  success_selector: "a[href='/logout']"       # Selector for logout link
  # success_url_contains: "/"                 # Alternative: Check if URL goes back to root (less specific)
  wait_after_login: 3                         # Wait 3 seconds after clicking Login

# --- Selectors for the TARGET page (https://quotes.toscrape.com/) ---
selectors:
  type: css
  item: "div.quote"
  fields:
    quote_text: "span.text"
    author: "small.author"
    tags_raw: "div.tags" # Keep raw tags for processing

# --- Pagination (Optional for target page) ---
# pagination:
#   next_page_selector: "li.next a"
#   max_pages: 1 # Limit pages for testing

# --- Proxy Configuration (Optional) ---
proxies: [] # Add proxies here if you want to test login *with* proxies

# --- Processing Rules ---
processing_rules:
  text_cleaning:
    quote_text: {trim: true, regex_replace: {'^[“”"]': '', '[“”"]$': ''}}
    author: {trim: true}
  validations:
    quote_text: {required: true, min_length: 5}
    author: {required: true}
  transformations:
    tags: |
      ', '.join(tag.strip() for tag in value.replace('Tags:', '').split('\n') if tag.strip()) if isinstance(value, str) else ''
  drop_fields:
    - tags_raw

# --- Common Options ---
output_dir: "outputs/dynamic_login_test"
request_delay: 1
max_retries: 2
user_agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36"
respect_robots: true
